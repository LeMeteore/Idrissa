
Notes prises, atelier prise en main branches Git:
-------------------------------------------------

- Tous dépot Git, par défaut, il y a une branche principale
  - elle peut nommée "main", parfois "master"


C'est quoi une branche ?
------------------------

- Une branche c'est le moyen pour moi de travailler sur le même projet
  - sans avoir à manuellement faire des duplication de dossiers / fichiers


Comment je crée une nouvelle branche ?
--------------------------------------

- git switch -c nom-de-la-nouvelle-branche


Comment je bascule d'une branche à une autre ?
-----------------------------------------------

- git switch nom-de-la-branche


Comment je liste les branches que j'ai ?
----------------------------------------

- git branch


Supposons j'ai un dépôt en local qui n'existe pas encore sur Github
--------------------------------------------------------------------

- Créer un dépôt vide sur Github
- Récupérer l'url permettant de clôner
- Revenir dans le dépôt en local
- Configurer le dépôt local pour le synchroniser avec le remote (4)
  - git remote add <nom-dépôt(origin)> <url-dépôt-distant(4)>
- À cet instant, les dépôts ne sont pas encore synchronisés mais ils sont prêts à le faire
- Demander au dépôt local de se synchroniser avec le dépôt distant
  - git fetch


Maintenant que les deux dépôts sont synchronisés, je peux pousser mes branches
- je me positionne sur la branche
  - git switch <nom-de-la-branche>

- je pousse la branche
  - git push origin <nom-de-la-branche>

- je répète le processus pour chaque branche si nécessaire


Si je veux, je peux renommer mes branches
-----------------------------------------

- je me positionne d'abord sur la branche que je veux renommer
  - git switch

- je renomme la branche
  - git branch -m <nouveau-nom-branche>


Bonne pratique ?
----------------
- Chaque membre de l'équipe, à la reception du dépôt, crée sa propre branche
- Puis, chaque membre de l'équipe travaille sur sa propre branche
